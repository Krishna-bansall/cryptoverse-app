{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.js","services/cryptoApi.js","components/Cryptocurrencies.js","components/Charts.js","components/CryptoDetails.js","services/cryptoNewsApi.js","components/News.js","components/Homepage.js","App.js","app/store.js","index.js"],"names":["Navbar","useState","isOpened","setIsOpened","className","src","icon","size","Title","level","to","ghost","onClick","prev","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","BulbOutlined","cryptoApiHeaders","process","createRequest","url","headers","console","log","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCrypto","query","count","getCryptoDetails","coinId","getCryptoHistoryDetails","timeframe","useGetCryptoQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryDetailsQuery","Typography","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setcryptos","searchTerm","setSearchTerm","useEffect","filteredData","coins","filter","crypto","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","xs","sm","lg","uuid","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Charts","coinHistory","coinPrice","coinTimestamp","i","history","length","push","moment","timestamp","format","max","Price","parseFloat","toFixed","ResponsiveContainer","width","height","AreaChart","margin","top","left","right","bottom","Area","type","strokeWidth","dataKey","stroke","animationEasing","activeDot","r","fillOpacity","fill","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","minTickGap","YAxis","axisLine","tick","domain","Math","min","Tooltip","separator","Text","Option","Select","CryptoDetails","useParams","timePeriod","setTimePeriod","isCoinFetching","cryptoDetails","coin","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","MoneyCollectOutlined","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","total","circulating","symbol","defaultValue","date","HTMLReactParser","description","links","link","href","rel","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","selectValue","setSelectValue","cryptoNews","align","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","provider","image","thumbnail","contentUrl","slice","datePublished","startOf","fromNow","Homepage","globalStat","valueStyle","color","totalExchanges","total24hVolume","floor","totalMarketCap","totalMarkets","RightCircleOutlined","style","App","exact","path","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.2bb14602.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState } from \"react\";\n\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport icon from \"../images/cryptocurrency.png\";\n\nimport {\n  HomeOutlined,\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\n\nfunction Navbar() {\n  const [isOpened, setIsOpened] = useState(false);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"nav-content\">\n        <div className=\"logo-content\">\n          <Avatar src={icon} size=\"large\" />\n          <Typography.Title level={2} className=\"logo\">\n            <Link to=\"/\">Cryptoverse</Link>\n          </Typography.Title>\n        </div>\n        <Button\n          ghost\n          onClick={() => setIsOpened((prev) => !prev)}\n          className=\"hamburger\"\n        >\n          <MenuOutlined className=\"menu-icon\" />\n        </Button>\n      </div>\n      {isOpened && (\n        <Menu className=\"menu\" theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  \"x-rapidapi-key\": process.env.REACT_APP_RAPIDAPI_KEY,\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com/\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nconsole.log(cryptoApiHeaders);\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCrypto: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistoryDetails: builder.query({\n      query: ({ coinId, timeframe }) =>\n        createRequest(`/coin/${coinId}/history?timePeriod=${timeframe}`),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptoQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryDetailsQuery,\n} = cryptoApi;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input, Typography } from \"antd\";\n\nimport { useGetCryptoQuery } from \"../services/cryptoApi\";\n\nconst { Title } = Typography;\nfunction Cryptocurrencies({ simplified }) {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptoQuery(count);\n  const [cryptos, setcryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  console.log(cryptos);\n\n  useEffect(() => {\n    // setcryptos(cryptosList?.data?.coins);\n    const filteredData = cryptosList?.data?.coins.filter((crypto) => {\n      return crypto.name.toLowerCase().includes(searchTerm.toLowerCase());\n    });\n    setcryptos(filteredData);\n  }, [searchTerm, cryptosList]);\n\n  if (isFetching) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {!simplified ? (\n        <>\n          <Title level={1}>Listed Cryptocurrencies 🌝</Title>\n          <div className=\"search-crypto\">\n            <Input\n              placeholder=\"Search Crypto Currencies\"\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n        </>\n      ) : null}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((crypto) => (\n          <Col className=\"crypto-card\" key={crypto.uuid} xs={24} sm={12} lg={6}>\n            <Link to={`/crypto/${crypto.uuid}`}>\n              <Card\n                title={`${crypto.rank}. ${crypto.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={crypto.iconUrl}\n                    alt=\"coin-icon\"\n                  />\n                }\n                hoverable\n              >\n                <p>Price: {millify(crypto.price)}</p>\n                <p>Market Cap: {millify(crypto.marketCap)}</p>\n                <p>Daily Change: {millify(crypto.change)}</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default Cryptocurrencies;\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n} from \"recharts\";\n\nfunction Charts({ coinHistory }) {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(\n      moment(coinHistory?.data?.history[i].timestamp).format(\"MMM Do, h:mm a\")\n    );\n  }\n\n  const data = [];\n  const max = [];\n\n  for (let i = 0; i < coinTimestamp.length; i += 1) {\n    data.push({\n      name: coinTimestamp[i],\n      Price: parseFloat(coinPrice[i]).toFixed(2),\n    });\n    max.push(coinPrice[i]);\n  }\n\n  if (!coinHistory) return <div>Loading..</div>;\n\n  return (\n    <div>\n      <ResponsiveContainer width=\"100%\" height={380}>\n        <AreaChart\n          margin={{ top: 0, left: -60, right: 0, bottom: 0 }}\n          data={data}\n        >\n          <Area\n            type=\"monotone\"\n            strokeWidth={2}\n            dataKey=\"Price\"\n            stroke=\"#317DFC\"\n            animationEasing=\"linear\"\n            activeDot={{ stroke: \"#eee\", strokeWidth: 2, r: 6 }}\n            fillOpacity={2}\n            fill=\"url(#gradient)\"\n          />\n          <defs>\n            <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"60%\" stopColor=\"var(--green)\" stopOpacity={1} />\n              <stop offset=\"100%\" stopColor=\"var(--green)\" stopOpacity={0.1} />\n            </linearGradient>\n          </defs>\n          <XAxis\n            dataKey=\"name\"\n            minTickGap={12}\n            // interval=\"preserveStartEnd\"\n            width={100}\n          />\n          <YAxis\n            dataKey=\"Price\"\n            axisLine={false}\n            tick={false}\n            type=\"number\"\n            domain={[Math.min(...max), Math.max(...max)]}\n          />\n          <Tooltip separator=\" $\" />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default Charts;\n","import React, { useState } from \"react\";\n\nimport HTMLReactParser from \"html-react-parser\";\nimport millify from \"millify\";\nimport { useParams } from \"react-router-dom\";\nimport Charts from \"./Charts\";\nimport { Col, Row, Typography, Select, Avatar } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryDetailsQuery,\n} from \"../services/cryptoApi\";\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nfunction CryptoDetails() {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\n\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory, isCoinFetching } = useGetCryptoHistoryDetailsQuery(\n    { coinId, timeframe: timePeriod }\n  );\n  console.log(coinHistory);\n  const cryptoDetails = data?.data?.coin;\n  if (isFetching) return <div>Loading</div>;\n\n  const time = [\"24h\", \"7d\", \"30d\", \"1y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${\n        cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)\n      }`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${\n        cryptoDetails?.allTimeHigh?.price &&\n        millify(cryptoDetails?.allTimeHigh?.price)\n      }`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails?.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails?.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails?.supply?.confirmed ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${\n        cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)\n      }`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${\n        cryptoDetails?.supply?.circulating &&\n        millify(cryptoDetails?.supply?.circulating)\n      }`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <>\n      <Col className=\"coin-detail-container\">\n        <Col className=\"coin-heading-container\">\n          <Avatar src={cryptoDetails.iconUrl} />\n          <Title level={2} className=\"coin-name\">\n            {data?.data?.coin.name}({data?.data?.coin.symbol}) Price\n          </Title>\n          <p>\n            {cryptoDetails.name} live price in US Dollar (USD). View value\n            statistics, market cap and supply.\n          </p>\n        </Col>\n        <Select\n          defaultValue=\"7d\"\n          className=\"select-timeperiod\"\n          placeholder=\"Select Timeperiod\"\n          onChange={(value) => setTimePeriod(value)}\n        >\n          {time.map((date) => (\n            <Option key={date}>{date}</Option>\n          ))}\n        </Select>\n        <Charts coinHistory={isCoinFetching ? null : coinHistory} />\n        <Row gutter={[24, 24]}>\n          <Col className=\"stats-container\" xs={24} lg={12}>\n            <Col className=\"coin-value-statistics\">\n              <Col className=\"coin-value-statistics-heading\">\n                <Title level={3} className=\"coin-details-heading\">\n                  {cryptoDetails.name} Value Statistics 📈\n                </Title>\n                <p>\n                  An overview showing the statistics of {cryptoDetails.name},\n                  such as the base and quote currency, the rank, and trading\n                  volume.\n                </p>\n              </Col>\n              {stats.map(({ title, value, icon }) => (\n                <Col className=\"coin-stats\">\n                  <Col className=\"coin-stats-name\">\n                    <Text>{icon}</Text>\n                    <Text>{title}</Text>\n                  </Col>\n                  <Text className=\"stats\">{value}</Text>\n                </Col>\n              ))}\n            </Col>\n          </Col>\n\n          <Col className=\"stats-container\" xs={24} lg={12}>\n            <Col className=\"coin-value-statistics\">\n              <Col className=\"coin-value-statistics-heading\">\n                <Title level={3} className=\"coin-details-heading\">\n                  {cryptoDetails.name} Other Information 📒\n                </Title>\n                <p>\n                  An overview showing the statistics of {cryptoDetails.name},\n                  such as the base and quote currency, the rank, and trading\n                  volume.\n                </p>\n              </Col>\n              {genericStats.map(({ title, value, icon }) => (\n                <Col className=\"coin-stats\">\n                  <Col className=\"coin-stats-name\">\n                    <Text>{icon}</Text>\n                    <Text>{title}</Text>\n                  </Col>\n                  <Text className=\"stats\">{value}</Text>\n                </Col>\n              ))}\n            </Col>\n          </Col>\n\n          <Col className=\"stats-container\" xs={24} lg={12}>\n            <Col className=\"coin-value-statistics\">\n              <Col className=\"coin-value-statistics-heading\">\n                <Title level={3} className=\"coin-details-heading\">\n                  What is {cryptoDetails.name} ? 🤔\n                </Title>\n                {HTMLReactParser(cryptoDetails.description)}\n              </Col>\n            </Col>\n          </Col>\n\n          <Col className=\"coin-links\" xs={24} lg={12}>\n            <Col className=\"coin-value-statistics\">\n              <Title level={3} className=\"coin-details-heading\">\n                {cryptoDetails.name} Links 🔗\n              </Title>\n              {cryptoDetails.links?.map((link) => (\n                <Row className=\"coin-link\" key={link.name}>\n                  <Title level={5} className=\"link-name\">\n                    {link.type}\n                  </Title>\n                  <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\n                    {link.name}\n                  </a>\n                </Row>\n              ))}\n            </Col>\n          </Col>\n        </Row>\n      </Col>\n    </>\n  );\n}\n\nexport default CryptoDetails;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsApiHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"5854d44e21msh510e2745e1718b6p1780bfjsnef5f48e17080\",\n};\n\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com/news\";\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsApiHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: \"cryptoNewsApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) =>\n        createRequest(\n          `/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&originalImg=True&freshness=Day&h=1000&count=${count}`\n        ),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Card, Avatar } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptoQuery } from \"../services/cryptoApi\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\nconst demoImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\n\nfunction News({ simplified }) {\n  const [selectValue, setSelectValue] = useState(\"cryptocurrency\");\n\n  const { data } = useGetCryptoQuery(100);\n\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\n    newsCategory: selectValue,\n    count: simplified ? 6 : 20,\n  });\n\n  // console.log(cryptoNews);\n  if (isFetching) return <div>Loading..</div>;\n\n  return (\n    <>\n      <Row align=\"middle\" gutter={[24, 24]}>\n        {!simplified && (\n          <>\n            <Col span={24}>\n              <Title level={2}>News 📰</Title>\n              <Select\n                showSearch\n                className=\"select-news\"\n                placeholder=\"Select A Crypto\"\n                onChange={(value) => setSelectValue(value)}\n                optionFilterProp=\"children\"\n                filterOption={\n                  (input, option) =>\n                    option.children[0]\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  // console.log(option)\n                }\n              >\n                <Option value=\"Cryptocurrencies\">Cryptocurrencies</Option>\n                {data?.data?.coins.map((coin) => (\n                  <Option value={coin.name}>{coin.name} </Option>\n                ))}\n              </Select>\n            </Col>\n          </>\n        )}\n        {cryptoNews.value.map((news, i) => (\n          <Col xs={24} sm={12} lg={8} key={i}>\n            <Card\n              hoverable\n              size=\"small\"\n              extra={\n                // <div>\n                <>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImage\n                    }\n                  />\n                  <Text className=\"provider-text\">\n                    {news.provider[0]?.name.length > 12\n                      ? `${news.provider[0]?.name.slice(0, 12)}..`\n                      : news.provider[0]?.name}\n                  </Text>\n                  {/* </div> */}\n                </>\n              }\n              className=\"news-card\"\n              title={\n                <div className=\"provider-container\">\n                  <Text>\n                    {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                  </Text>\n                </div>\n              }\n            >\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n                <div className=\"news-image-container\">\n                  <Title className=\"news-title\" level={4}>\n                    {news.name.length > 150\n                      ? news.name.slice(0, 50) + \"...\"\n                      : news.name}\n                  </Title>\n                  <img src={news?.image?.contentUrl || demoImage} alt=\"news\" />\n                </div>\n              </a>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n}\n\nexport default News;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nimport { useGetCryptoQuery } from \"../services/cryptoApi\";\nimport Cryptocurrencies from \"./Cryptocurrencies\";\nimport News from \"./News\";\n\nimport { RightCircleOutlined } from \"@ant-design/icons\";\n\nconst { Title } = Typography;\n\nfunction Homepage() {\n  const { data, isFetching } = useGetCryptoQuery(10);\n  const globalStat = data?.data?.stats;\n\n  if (isFetching) {\n    return <div>Loading</div>;\n  }\n  console.log(data);\n  return (\n    <>\n      <Title level={1} className=\"heading\">\n        Global Crypto Stats 🐶💹\n      </Title>\n      <Title level={5}>\n        <Row>\n          <Col span={12}>\n            <Statistic\n              title=\"Total Crypto Currencies\"\n              value={millify(globalStat?.total)}\n              valueStyle={{ color: \"var(--pink)\" }}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic\n              title=\"Total Exchanges\"\n              value={millify(globalStat?.totalExchanges)}\n              valueStyle={{ color: \"var(--pink)\" }}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic\n              title=\"Total 24h Value\"\n              value={\n                globalStat?.total24hVolume < 1000000000000000\n                  ? millify(globalStat.total24hVolume)\n                  : Math.floor(globalStat.total24hVolume / 10000000000) / 100 +\n                    \" T\"\n              }\n              valueStyle={{ color: \"var(--pink)\" }}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic\n              title=\"Total Market Cap\"\n              value={millify(globalStat?.totalMarketCap)}\n              valueStyle={{ color: \"var(--pink)\" }}\n            />\n          </Col>\n          <Col span={12}>\n            <Statistic\n              valueStyle={{ color: \"var(--pink)\" }}\n              title=\"Total Market\"\n              value={millify(globalStat?.totalMarkets)}\n            />\n          </Col>\n        </Row>\n      </Title>\n\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies in the World\n        </Title>\n        <Title level={4} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n          <RightCircleOutlined style={{ color: \"var(--bgPrimary)\" }} />\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={4} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n          <RightCircleOutlined style={{ color: \"var(--bgPrimary)\" }} />\n        </Title>\n      </div>\n      <News simplified />\n    </>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport { Switch, Link, Route } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport {\n  Navbar,\n  Cryptocurrencies,\n  CryptoDetails,\n  Homepage,\n  News,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            Cryptomania <br />\n            All Rights Reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoApi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}